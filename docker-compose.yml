version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # ✅ Включаем авто-создание топиков
    ports:
      - "9092:9092"
    volumes:
      - ./kafka-data:/var/lib/kafka/data  # ✅ Добавляем volume для хранения данных

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  api:
    build: .
    container_name: api
    depends_on:
      - kafka
      - redis
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      KAFKA_BROKER: kafka:9092
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SQLITE_DB: /data/database.sqlite
    volumes:
      - ./data:/data

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    ports:
      - "9000:9000"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: PLAINTEXT  # ✅ Фикс для Kafka UI
      AUTH_TYPE: LOGIN_FORM
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: strongpassword123
    ports:
      - "8080:8080"
